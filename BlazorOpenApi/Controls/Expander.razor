<CascadingValue Name="OpenAPIUI_TOC_Parent" Value="_anchor">
    <div id="@_anchor" class="expander @Class">
        <div class="ex-header @HeaderClass" onclick="@(() => Toggle())">
            @Title
            <div>
                @if (Collapsed)
                {
                    <svg width="24px" height="24px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M18 9L12 15L6 9" stroke="var(--oa-fg-lighter)" stroke-width="2" />
                    </svg>
                }
                else
                {
                    <svg width="24px" height="24px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M18 15L12 9L6 15" stroke="var(--oa-fg-lighter)" stroke-width="2" />
                    </svg>
                }
            </div>
        </div>

        @if (!Collapsed && ChildContent != null)
        {
            @ChildContent
        }
    </div>
</CascadingValue>

@code {
    [Parameter]
    public RenderFragment? ChildContent { get; set; }
    [Parameter]
    public bool Collapsed               { get; set; } = true;
    [Parameter]
    public string Title                 { get; set; } = "";
    [Parameter]
    public string HeaderClass           { get; set; } = "";
    [Parameter]
    public string Class                 { get; set; } = "";
    [Parameter]
    public bool AddToTOC                { get; set; } = false;

    [CascadingParameter(Name = "OpenAPIUI_TOC")]        public ITableOfContentsTree Tree   { get; set; } = null!;
    [CascadingParameter(Name = "OpenAPIUI_TOC_Parent")] public string               Parent { get; set; } = "";

    private string _anchor = $"anc{Random.Shared.Next():X8}";

    protected override void OnAfterRender(bool firstRender)
    {
        if (!firstRender)
            return;

        if (AddToTOC)
        {
            Tree.Add(Title, _anchor, Parent, Collapsed);
            Collapsed = Tree.IsCollapsed(Title);
        }
    }

    void Toggle()
    {
        Collapsed = !Collapsed;
        if ( AddToTOC )
            Tree.Collapse(_anchor, Collapsed);

        StateHasChanged();
    }
}
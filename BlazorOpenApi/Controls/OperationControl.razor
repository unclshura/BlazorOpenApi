@using System.Text.Json
@using Microsoft.OpenApi.Models
@using Microsoft.OpenApi.Readers

@if (Value != null)
{
    <div class="op-header @OperationClass" @onclick="Expand">
        <div class="op-type">@Operation</div>
        <div class="spacer op-header-text">-</div>
        <div class="op-header-text" id="@Value.OperationId">@Endpoint</div>
        <div class="spacer op-header-text">-</div>
        <div class="op-summary op-header-text">@Value.Summary</div>
        @if (Value.Tags.Count > 0)
        {
            <div class="op-tags">
                @foreach (var tag in Value.Tags)
                {
                    <Tooltip class="op-tag" TooltipText="@tag.Description">
                        <Text Class="op-tag-name" Value="@tag.Name" />
                    </Tooltip>
                }
            </div>
        }
        @if (_expanded)
        {
            <svg width="24px" height="24px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M18 15L12 9L6 15" stroke="var(--oa-fg-lighter)" stroke-width="2" />
            </svg>
        }
        else
        {
            <svg width="24px" height="24px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M18 9L12 15L6 9" stroke="var(--oa-fg-lighter)" stroke-width="2" />
            </svg>
        }

    </div>
    @if ( _expanded )
    {
        <div class="operation">

            @if (Value != null)
            {
                <MarkdownControl Value="@Value.Description" />

                if (Value.Servers?.Count > 0)
                {
                    <ServersControl Value="@Value.Servers" />
                }

                <ParametersControl Value="@Value.Parameters"/>
                <RequestBodyControl Value="@Value.RequestBody"/>
                <ResponsesControl Value="@Value.Responses" />
            }
        </div>
    }
}

@code {
    [Parameter]
    public OperationType Operation { get; set; }
    [Parameter]
    public OpenApiOperation? Value { get; set; }
    [Parameter]
    public string Endpoint { get; set; } = "";

    private string OperationClass => $"op-{Operation.ToString().ToLower()}";

    private bool _expanded = true;

    private void Expand()
    {
        _expanded = !_expanded;
        StateHasChanged();
    }
}
